ERROR:root:Traceback (most recent call last):
  File "/home/tanglab/Desktop/BF-CL/main8.py", line 381, in <module>
    main(42)
  File "/home/tanglab/Desktop/BF-CL/main8.py", line 343, in main
    loss, sinr = train_step(model, x_batch, h_batch, optimizer, channel_stats)
  File "/home/tanglab/miniconda3/envs/BF-CL/lib/python3.10/site-packages/tensorflow/python/util/traceback_utils.py", line 153, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "/tmp/__autograph_generated_fileculgj6bp.py", line 11, in tf__train_step
    w = ag__.converted_call(ag__.ld(model), (ag__.ld(x_batch), ag__.ld(channel_stats)), dict(training=True), fscope)
  File "/home/tanglab/miniconda3/envs/BF-CL/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py", line 70, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "/tmp/__autograph_generated_filedfwwzvog.py", line 61, in tf__call
    ag__.if_stmt(ag__.and_(lambda : ag__.ld(channel_stats) is not None, lambda : 'task_idx' not in ag__.ld(channel_stats)), if_body, else_body, get_state_1, set_state_1, ('x',), 1)
  File "/tmp/__autograph_generated_filedfwwzvog.py", line 53, in else_body
    x = ag__.converted_call(ag__.ld(self).heads[ag__.ld(head_name)], (ag__.ld(x),), None, fscope)
ValueError: in user code:

    File "/home/tanglab/Desktop/BF-CL/main8.py", line 273, in train_step  *
        w = model(x_batch, channel_stats, training=True)  # [B, U, A]
    File "/home/tanglab/miniconda3/envs/BF-CL/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py", line 70, in error_handler  **
        raise e.with_traceback(filtered_tb) from None
    File "/tmp/__autograph_generated_filedfwwzvog.py", line 61, in tf__call
        ag__.if_stmt(ag__.and_(lambda : ag__.ld(channel_stats) is not None, lambda : 'task_idx' not in ag__.ld(channel_stats)), if_body, else_body, get_state_1, set_state_1, ('x',), 1)
    File "/tmp/__autograph_generated_filedfwwzvog.py", line 53, in else_body
        x = ag__.converted_call(ag__.ld(self).heads[ag__.ld(head_name)], (ag__.ld(x),), None, fscope)

    ValueError: Exception encountered when calling layer 'beamforming_meta_attention_model' (type BeamformingMetaAttentionModel).
    
    in user code:
    
        File "/home/tanglab/Desktop/BF-CL/main8.py", line 114, in call  *
            x = self.heads[head_name](x)
        File "/home/tanglab/miniconda3/envs/BF-CL/lib/python3.10/site-packages/keras/src/layers/rnn/base_rnn.py", line 556, in __call__  **
            return super().__call__(inputs, **kwargs)
        File "/home/tanglab/miniconda3/envs/BF-CL/lib/python3.10/site-packages/keras/src/utils/traceback_utils.py", line 70, in error_handler
            raise e.with_traceback(filtered_tb) from None
    
        ValueError: tf.function only supports singleton tf.Variables created on the first call. Make sure the tf.Variable is only created once or created outside tf.function. See https://www.tensorflow.org/guide/function#creating_tfvariables for more information.
    
    
    Call arguments received by layer 'beamforming_meta_attention_model' (type BeamformingMetaAttentionModel):
      • inputs=tf.Tensor(shape=(8, 20, 64), dtype=complex64)
      • channel_stats={'delay_spread': 'tf.Tensor(shape=(8, 1), dtype=float32)', 'doppler': 'tf.Tensor(shape=(8, 1), dtype=float32)', 'snr': 'tf.Tensor(shape=(8, 1), dtype=float32)', 'task_idx': '1'}
      • training=True
